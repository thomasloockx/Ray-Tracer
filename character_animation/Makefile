#############################################################################
# Makefile for building: character_animation
# Generated by qmake (2.01a) (Qt 4.4.3) on: Fri Jun 5 15:50:36 2009
# Project:  character_animation.pro
# Template: app
# Command: /usr/bin/qmake -unix -o Makefile character_animation.pro
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -Wall -W -D_REENTRANT $(DEFINES)
CXXFLAGS      = -pipe -O3 -DNDEBUG -DRT_PARTIAL_REBUILD -DRT_ANIMATION_CYCLE_SAMPLING -g -Wall -W -D_REENTRANT $(DEFINES)
INCPATH       = -I/usr/share/qt4/mkspecs/linux-g++ -I. -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtCore -I/usr/include/qt4/QtGui -I/usr/include/qt4/QtGui -I/usr/include/qt4 -I../rtcore -I/usr/include/cal3d -I. -I.
LINK          = g++
LFLAGS        = -Wl,--no-undefined
LIBS          = $(SUBLIBS)  -L/usr/lib -lcal3d -L../rtcore/ -lrtcore -lQtGui -lQtCore -lpthread
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -sf
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = ./

####### Files

SOURCES       = cal3dadapter.cpp \
		cfgparser.cpp \
		fastrebuild.cpp \
		fuzzy.cpp \
		main.cpp \
		testcase.cpp \
		twolevelrefit.cpp \
		refit.cpp \
		cluster.cpp 
OBJECTS       = cal3dadapter.o \
		cfgparser.o \
		fastrebuild.o \
		fuzzy.o \
		main.o \
		testcase.o \
		twolevelrefit.o \
		refit.o \
		cluster.o
DIST          = /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		character_animation.pro
QMAKE_TARGET  = character_animation
DESTDIR       = 
TARGET        = character_animation

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile $(TARGET)

$(TARGET):  $(OBJECTS)  
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(OBJCOMP) $(LIBS)

Makefile: character_animation.pro  /usr/share/qt4/mkspecs/linux-g++/qmake.conf /usr/share/qt4/mkspecs/common/g++.conf \
		/usr/share/qt4/mkspecs/common/unix.conf \
		/usr/share/qt4/mkspecs/common/linux.conf \
		/usr/share/qt4/mkspecs/qconfig.pri \
		/usr/share/qt4/mkspecs/features/qt_functions.prf \
		/usr/share/qt4/mkspecs/features/qt_config.prf \
		/usr/share/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/share/qt4/mkspecs/features/default_pre.prf \
		/usr/share/qt4/mkspecs/features/debug.prf \
		/usr/share/qt4/mkspecs/features/default_post.prf \
		/usr/share/qt4/mkspecs/features/warn_on.prf \
		/usr/share/qt4/mkspecs/features/qt.prf \
		/usr/share/qt4/mkspecs/features/unix/thread.prf \
		/usr/share/qt4/mkspecs/features/moc.prf \
		/usr/share/qt4/mkspecs/features/resources.prf \
		/usr/share/qt4/mkspecs/features/uic.prf \
		/usr/share/qt4/mkspecs/features/yacc.prf \
		/usr/share/qt4/mkspecs/features/lex.prf \
		/usr/lib/libQtGui.prl \
		/usr/lib/libQtCore.prl
	$(QMAKE) -unix -o Makefile character_animation.pro
/usr/share/qt4/mkspecs/common/g++.conf:
/usr/share/qt4/mkspecs/common/unix.conf:
/usr/share/qt4/mkspecs/common/linux.conf:
/usr/share/qt4/mkspecs/qconfig.pri:
/usr/share/qt4/mkspecs/features/qt_functions.prf:
/usr/share/qt4/mkspecs/features/qt_config.prf:
/usr/share/qt4/mkspecs/features/exclusive_builds.prf:
/usr/share/qt4/mkspecs/features/default_pre.prf:
/usr/share/qt4/mkspecs/features/debug.prf:
/usr/share/qt4/mkspecs/features/default_post.prf:
/usr/share/qt4/mkspecs/features/warn_on.prf:
/usr/share/qt4/mkspecs/features/qt.prf:
/usr/share/qt4/mkspecs/features/unix/thread.prf:
/usr/share/qt4/mkspecs/features/moc.prf:
/usr/share/qt4/mkspecs/features/resources.prf:
/usr/share/qt4/mkspecs/features/uic.prf:
/usr/share/qt4/mkspecs/features/yacc.prf:
/usr/share/qt4/mkspecs/features/lex.prf:
/usr/lib/libQtGui.prl:
/usr/lib/libQtCore.prl:
qmake:  FORCE
	@$(QMAKE) -unix -o Makefile character_animation.pro

dist: 
	@$(CHK_DIR_EXISTS) .tmp/character_animation1.0.0 || $(MKDIR) .tmp/character_animation1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) .tmp/character_animation1.0.0/ && $(COPY_FILE) --parents cal3dadapter.h cal3dconversions.h fastrebuild.h fuzzy.h cfgparser.h testcase.h twolevelrefit.h refit.h cluster.h .tmp/character_animation1.0.0/ && $(COPY_FILE) --parents cal3dadapter.cpp cfgparser.cpp fastrebuild.cpp fuzzy.cpp main.cpp testcase.cpp twolevelrefit.cpp refit.cpp cluster.cpp .tmp/character_animation1.0.0/ && (cd `dirname .tmp/character_animation1.0.0` && $(TAR) character_animation1.0.0.tar character_animation1.0.0 && $(COMPRESS) character_animation1.0.0.tar) && $(MOVE) `dirname .tmp/character_animation1.0.0`/character_animation1.0.0.tar.gz . && $(DEL_FILE) -r .tmp/character_animation1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile


mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all:
compiler_moc_header_clean:
compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: 

####### Compile

cal3dadapter.o: cal3dadapter.cpp cal3dadapter.h \
		cal3dconversions.h \
		cluster.h \
		cfgparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cal3dadapter.o cal3dadapter.cpp

cfgparser.o: cfgparser.cpp cfgparser.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cfgparser.o cfgparser.cpp

fastrebuild.o: fastrebuild.cpp fastrebuild.h \
		testcase.h \
		cal3dadapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fastrebuild.o fastrebuild.cpp

fuzzy.o: fuzzy.cpp cal3dconversions.h \
		cluster.h \
		fuzzy.h \
		testcase.h \
		cal3dadapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o fuzzy.o fuzzy.cpp

main.o: main.cpp cfgparser.h \
		fastrebuild.h \
		testcase.h \
		cal3dadapter.h \
		fuzzy.h \
		twolevelrefit.h \
		refit.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o main.o main.cpp

testcase.o: testcase.cpp testcase.h \
		cal3dadapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o testcase.o testcase.cpp

twolevelrefit.o: twolevelrefit.cpp cal3dconversions.h \
		cluster.h \
		twolevelrefit.h \
		fuzzy.h \
		testcase.h \
		cal3dadapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o twolevelrefit.o twolevelrefit.cpp

refit.o: refit.cpp refit.h \
		testcase.h \
		cal3dadapter.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o refit.o refit.cpp

cluster.o: cluster.cpp cluster.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o cluster.o cluster.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

